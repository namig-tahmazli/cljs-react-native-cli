{"version":3,"sources":["flex/row_column_gap.cljs"],"mappings":";AAMA,iCAAA,jCAAMA,0EAAYC;AAAlB,AACE,kBAAKC;AAAL,AAAW,GAAU,SAAA,RAAMA;AAAhB;;AAAA,AACE,IAAMC,cAAY,cAAA,dAACC,SAAYF;IACzBG,SAAO,EAAA,AAAAC,+CAAA,jCAAQ,AAACC,MAASJ,eAChBA;AAFf,AAIE,8BAAA,mFAAA,1GAACK,yKAAyBP,IAAII;;;;AAE/C,8BAAA,9BAAMI,oEAASC,KAAKT;AAApB,AACE,IAAMU,WAAS,sDAAA,mFAAA,zIAACC,uMAA0BX;AAA1C,AAAA,0FAAA,uFAAA,2CAAA,uDAAA,2CAAA,sDAAA,IAAA,mEAAA,yEAAA,mFAAA,oGAAA,mFAAA,4FAAA,2CAAA,uDAAA,2CAAA,iEAAA,yDAAA,oFAAA,IAAA,uDAAA,aAAA,6HAAA,jwCACMY,6fAECC,wCAAQJ,+IACRK,sgBAGqB,4CAAA,AAAAC,gBAAML,mFACG,AAACX,+BAAWC;;AAEnD,qCAAA,rCAAMgB;AAAN,AAAA,0FAAA,uFAAA,2CAAA,uDAAA,2CAAA,sDAAA,IAAA,wEAAA,yDAAA,2DAAA,KAAA,4EAAA,uEAAA,mFAAA,uFAAA,2CAAA,uDAAA,2CAAA,wEAAA,mDAAA,sEAAA,IAAA,iDAAA,IAAA,4EAAA,hsCACMJ,qsBAKCA,+kBAKH,4BAAA,UAAA,tCAACJ,0FACD,4BAAA,aAAA,zCAACA,2GAEF,iBAAAS,gBAAA,AAAAC,8BAAA;AAAA,AAAA,IAAAC,2BAAAC;AAAA,AAAA,GAAA,CAAAD,4BAAA;AAAA;AAAA,IAAAE,yBAAAF;AAAA,AAAA,GAAA,CAAA,AAAAF,6BAAA,AAAAI;AAAA,AAAA,GAAAC;AAAA,AAAA,AAAA,EAAAC,wBAAAC,4BAAAC,eAAA,CAAA,iDAAA;;AAAA;;AAAA;;AAAA,CAAA,AAAAR,2BAAA,AAAAI;;;AAAA,IAAAK,YAAA,CAAA,AAAAT,yBAAA;cAAA,EAAA,EAAAS,eAAA,AAAArB,cAAA,AAAAY,6BAAA,SAAA,CAAAA,cAAA,2QAAA,CAAAA,cAAA,1XAAaW,uGAAQ,sDAAA,mFAAA,8DAAA,vMAACjB;iBAAtB,EAAA,EAAAe,eAAA,AAAArB,cAAA,AAAAY,6BAAA,SAAA,CAAAA,cAAA,iRAAA,CAAAA,cAAA,nYACaY,0GAAW,sDAAA,mFAAA,8DAAA,vMAAClB;IADzBgB,WAAA,AAAA,mFAAA,uFAAA,2CAAA,uDAAA,2CAAA,4EAAA,gEAAA,sDAAA,IAAA,8DAAA,oDAAA,iEAAA,MAAA,4DAAA,AAAAZ,yBAAA,gEAAA,AAAAA,4BAAA,uEAAA,5yBAEMH,goBAI2BgB,yFACGC,oKAGjC,AAACC,4DAAuB,WAAKC;AAAL,AAAA,kDAAA,yDAAA;GAAxB,oFAAA,gEAAA,uDAAA,yEAAA,oEAAA,2EAAA,2EAAA,yDAAA,mDAAA,qDAAA;AAVH,AAAAJ","names":["flex.row-column-gap/int-parser","key","text","int-parsing","js/parseInt","result","cljs.core/not","js/isNaN","re-frame.core/dispatch","flex.row-column-gap/gap-tab","name","gap-subs","re_frame.core.subscribe","js/shadow.js.shim.module$react_native.View","js/shadow.js.shim.module$react_native.Text","js/shadow.js.shim.module$react_native.TextInput","cljs.core/deref","flex.row-column-gap/row-column-gap","with-let16197","reagent.ratom/with-let-values","temp__5808__auto__","reagent.ratom/*ratom-context*","c__15612__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init16198","res16199","row-gap","column-gap","utilities.build_demo_children","_"],"sourcesContent":["(ns flex.row-column-gap\n  (:require [re-frame.core :as rf]\n            [utilities :as ut]\n            [\"react-native\" :as rn]\n            [reagent.core :as r]))\n\n(defn int-parser [key]\n  (fn [text] (when-not (nil? text)\n               (let [int-parsing (js/parseInt text 10)\n                     result (if-not (js/isNaN int-parsing)\n                              int-parsing\n                              0)]\n                 (rf/dispatch [:db/set-gap key result])))))\n\n(defn gap-tab [name key]\n  (let [gap-subs (rf/subscribe [:db/get-gap key])]\n    [:> rn/View {:style {:flex 1\n                         :align-items :center}}\n     [:> rn/Text name]\n     [:> rn/TextInput {:style {:text-align :center\n                               :border-bottom-width 1\n                               :width 50}\n                       :value (str @gap-subs)\n                       :on-change-text (int-parser key)}]]))\n\n(defn row-column-gap []\n  [:> rn/View {:style {:flex 1\n                       :flex-direction :column\n                       :padding 10\n                       :background-color :white}}\n   \n   [:> rn/View {:style {:flex-direction :row\n                        :margin-bottom 8\n                        :gap 8\n                        :justify-content :space-around}} \n    \n    (gap-tab \"Row Gap\" :row)\n    (gap-tab \"Column Gap\" :column)]\n   \n   (r/with-let [row-gap (rf/subscribe [:db/get-gap :row])\n                column-gap (rf/subscribe [:db/get-gap :column])]\n     [:> rn/View {:style {:background-color :aliceblue\n                          :flex 1\n                          :flex-wrap :wrap\n                          :max-height 400\n                          :row-gap @row-gap\n                          :column-gap @column-gap\n                          :align-content :flex-start}}\n     \n      (ut/build-demo-children (fn [_] {:height 80})\n                              [:orangered :orange :mediumseagreen\n                               :deepskyblue :mediumturquoise :mediumslateblue\n                               :purple :red :blue :green])])])"]}