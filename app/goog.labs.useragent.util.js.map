{
"version":3,
"file":"goog.labs.useragent.util.js",
"lineCount":82,
"mappings":"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",
"sources":["goog/labs/useragent/util.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Utilities used by goog.labs.userAgent tools. These functions\n * should not be used outside of goog.labs.userAgent.*.\n *\n */\n\ngoog.module('goog.labs.userAgent.util');\ngoog.module.declareLegacyNamespace();\n\nconst {caseInsensitiveContains, contains} = goog.require('goog.string.internal');\nconst {useClientHints} = goog.require('goog.labs.userAgent');\n\n/**\n * @const {boolean} If true, use navigator.userAgentData without check.\n * TODO(user): FEATURESET_YEAR >= 2024 if it supports mobile and all the\n * brands we need.  See https://caniuse.com/mdn-api_navigator_useragentdata.\n */\nconst ASSUME_CLIENT_HINTS_SUPPORT = false;\n\n/**\n * Gets the native userAgent string from navigator if it exists.\n * If navigator or navigator.userAgent string is missing, returns an empty\n * string.\n * @return {string}\n */\nfunction getNativeUserAgentString() {\n  const navigator = getNavigator();\n  if (navigator) {\n    const userAgent = navigator.userAgent;\n    if (userAgent) {\n      return userAgent;\n    }\n  }\n  return '';\n}\n\n/**\n * Gets the native userAgentData object from navigator if it exists.\n * If navigator.userAgentData object is missing returns null.\n * @return {?NavigatorUAData}\n */\nfunction getNativeUserAgentData() {\n  const navigator = getNavigator();\n  // TODO(user): Use navigator?.userAgent ?? null once it's supported.\n  if (navigator) {\n    return navigator.userAgentData || null;\n  }\n  return null;\n}\n\n/**\n * Getter for the native navigator.\n * @return {!Navigator}\n */\nfunction getNavigator() {\n  return goog.global.navigator;\n}\n\n/**\n * A possible override for applications which wish to not check\n * navigator.userAgent but use a specified value for detection instead.\n * @type {?string}\n */\nlet userAgentInternal = null;\n\n/**\n * A possible override for applications which wish to not check\n * navigator.userAgentData but use a specified value for detection instead.\n * @type {?NavigatorUAData}\n */\nlet userAgentDataInternal = getNativeUserAgentData();\n\n/**\n * Override the user agent string with the given value.\n * This should only be used for testing within the goog.labs.userAgent\n * namespace.\n * Pass `null` to use the native browser object instead.\n * @param {?string=} userAgent The userAgent override.\n * @return {void}\n */\nfunction setUserAgent(userAgent = undefined) {\n  userAgentInternal =\n      typeof userAgent === 'string' ? userAgent : getNativeUserAgentString();\n}\n\n/** @return {string} The user agent string. */\nfunction getUserAgent() {\n  return userAgentInternal == null ? getNativeUserAgentString() :\n                                     userAgentInternal;\n}\n\n/**\n * Override the user agent data object with the given value.\n * This should only be used for testing within the goog.labs.userAgent\n * namespace.\n * Pass `null` to specify the absence of userAgentData. Note that this behavior\n * is different from setUserAgent.\n * @param {?NavigatorUAData} userAgentData The userAgentData override.\n */\nfunction setUserAgentData(userAgentData) {\n  userAgentDataInternal = userAgentData;\n}\n\n/**\n * If the user agent data object was overridden using setUserAgentData,\n * reset it so that it uses the native browser object instead, if it exists.\n */\nfunction resetUserAgentData() {\n  userAgentDataInternal = getNativeUserAgentData();\n}\n\n/** @return {?NavigatorUAData} Navigator.userAgentData if exist */\nfunction getUserAgentData() {\n  return userAgentDataInternal;\n}\n\n/**\n * Checks if any string in userAgentData.brands matches str.\n * Returns false if userAgentData is not supported.\n * @param {string} str\n * @return {boolean} Whether any brand string from userAgentData contains the\n *     given string.\n */\nfunction matchUserAgentDataBrand(str) {\n  if (!useClientHints()) return false;\n  const data = getUserAgentData();\n  if (!data) return false;\n  return data.brands.some(({brand}) => brand && contains(brand, str));\n}\n\n/**\n * @param {string} str\n * @return {boolean} Whether the user agent contains the given string.\n */\nfunction matchUserAgent(str) {\n  const userAgent = getUserAgent();\n  return contains(userAgent, str);\n}\n\n/**\n * @param {string} str\n * @return {boolean} Whether the user agent contains the given string, ignoring\n *     case.\n */\nfunction matchUserAgentIgnoreCase(str) {\n  const userAgent = getUserAgent();\n  return caseInsensitiveContains(userAgent, str);\n}\n\n/**\n * Parses the user agent into tuples for each section.\n * @param {string} userAgent\n * @return {!Array<!Array<string>>} Tuples of key, version, and the contents of\n *     the parenthetical.\n */\nfunction extractVersionTuples(userAgent) {\n  // Matches each section of a user agent string.\n  // Example UA:\n  // Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us)\n  // AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405\n  // This has three version tuples: Mozilla, AppleWebKit, and Mobile.\n\n  const versionRegExp = new RegExp(\n      // Key. Note that a key may have a space.\n      // (i.e. 'Mobile Safari' in 'Mobile Safari/5.0')\n      '([A-Z][\\\\w ]+)' +\n\n          '/' +                // slash\n          '([^\\\\s]+)' +        // version (i.e. '5.0b')\n          '\\\\s*' +             // whitespace\n          '(?:\\\\((.*?)\\\\))?',  // parenthetical info. parentheses not matched.\n      'g');\n\n  const data = [];\n  let match;\n\n  // Iterate and collect the version tuples.  Each iteration will be the\n  // next regex match.\n  while (match = versionRegExp.exec(userAgent)) {\n    data.push([\n      match[1],  // key\n      match[2],  // value\n      // || undefined as this is not undefined in IE7 and IE8\n      match[3] || undefined  // info\n    ]);\n  }\n\n  return data;\n}\n\nexports = {\n  ASSUME_CLIENT_HINTS_SUPPORT,\n  extractVersionTuples,\n  getNativeUserAgentString,\n  getUserAgent,\n  getUserAgentData,\n  matchUserAgent,\n  matchUserAgentDataBrand,\n  matchUserAgentIgnoreCase,\n  resetUserAgentData,\n  setUserAgent,\n  setUserAgentData,\n};\n"],
"names":["getNativeUserAgentString","navigator","getNavigator","userAgent","getNativeUserAgentData","userAgentData","goog","global","setUserAgent","userAgentInternal","getUserAgent","setUserAgentData","userAgentDataInternal","resetUserAgentData","getUserAgentData","matchUserAgentDataBrand","str","useClientHints","data","brands","some","brand","contains","matchUserAgent","matchUserAgentIgnoreCase","caseInsensitiveContains","extractVersionTuples","versionRegExp","RegExp","match","exec","push","undefined","module","declareLegacyNamespace","require","ASSUME_CLIENT_HINTS_SUPPORT","exports"]
}
