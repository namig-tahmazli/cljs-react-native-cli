{"version":3,"sources":["flex/align_content.cljs"],"mappings":";AAMA,mCAAA,nCAAMA;AAAN,AACE,IAAAC,gBAAA,AAAAC,8BAAA;AAAA,AAAA,IAAAC,2BAAAC;AAAA,AAAA,GAAA,CAAAD,4BAAA;AAAA;AAAA,IAAAE,yBAAAF;AAAA,AAAA,GAAA,CAAA,AAAAF,6BAAA,AAAAI;AAAA,AAAA,GAAAC;AAAA,AAAA,AAAA,EAAAC,wBAAAC,4BAAAC,eAAA,CAAA,iDAAA;;AAAA;;AAAA;;AAAA,CAAA,AAAAR,2BAAA,AAAAI;;;AAAA,IAAAK,YAAA,CAAA,AAAAT,yBAAA;WAAA,EAAA,EAAAS,eAAA,AAAAC,cAAA,AAAAV,6BAAA,SAAA,CAAAA,cAAA,2OAAA,CAAAA,cAAA,vVAAaY,oGAAK,sDAAA,mFAAA,zIAACC;IAAnBF,WAAA,AAAA,mFAAA,uFAAA,2CAAA,nFACMG,0IAAgBC,+BACnB,uBAAA,vBAACC,uCACD,sBAAA,AAAAC,sBAAA,mFAAA,aAAA,WAAA,UAAA,SAAA,gBAAA,eAAA,uBAAA,WAAAC,3OAACC,sCAAgBP;AAAjB,AAGiB,8BAAA,mFAAA,kFAAAM,5LAACE;IAClB,mCAAA,AAAAH,lBAAMI,kCAAiBT;AAAvB,AACE,yDAAA,2CAAA,8DAAA,oDAAA,/MAACU,sRAC6BD,wBAChB,AAACE,4DAAuB,WAAKC;AAAL,AACE,GAAI,EAAI,6CAAA,7CAACC,6GAAaD,YACd,6CAAA,7CAACC,gGAAOD;AADhB,kDAAA,yDAAA,KAAA,uDAAA;;AAAA,kDAAA,yDAAA;;GAD1B,oFAAA,gEAAA,uDAAA,yEAAA,oEAAA,2EAAA,2EAAA,yDAAA,mDAAA,qDAAA;;AAVnB,AAAAb","names":["flex.align-content/align-content","with-let16173","reagent.ratom/with-let-values","temp__5808__auto__","reagent.ratom/*ratom-context*","c__15612__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init16174","cljs.core/not","res16175","subs","re_frame.core.subscribe","js/shadow.js.shim.module$react_native.View","utilities/screen-style","utilities/header-title","cljs.core/deref","p1__16172#","utilities/header-menu","re-frame.core/dispatch","selected-option","utilities.container","utilities.build_demo_children","color","cljs.core._EQ_"],"sourcesContent":["(ns flex.align-content\n  (:require [reagent.core :as r]\n            [re-frame.core :as rf]\n            [utilities :as ut]\n            [\"react-native\" :as rn]))\n\n(defn align-content []\n  (r/with-let [subs (rf/subscribe [:db/get-align-content])]\n    [:> rn/View {:style ut/screen-style}\n     (ut/header-title \"alignContent\")\n     (ut/header-menu @subs [\"flex-start\" \"flex-end\"\n                            \"stretch\" \"center\"\n                            \"space-between\" \"space-around\" \"space-evenly\"]\n                     #(rf/dispatch [:db/set-align-content %]))\n     (let [selected-option @subs]\n       (ut/container {:flex-wrap :wrap\n                      :align-content selected-option}\n                     (ut/build-demo-children (fn [color]\n                                               (if (or (= :orangered color)\n                                                       (= :red color))\n                                                 {:height 80 :width \"auto\"}\n                                                 {:height 80}))\n                                             [:orangered :orange :mediumseagreen\n                                              :deepskyblue :mediumturquoise :mediumslateblue\n                                              :purple :red :blue :green])))]))"]}