["^ ","~:resource-id",["~:shadow.build.classpath/resource","goog/labs/useragent/highentropy/highentropyvalue.js"],"~:js","goog.loadModule(function(exports) {\n  \"use strict\";\n  goog.module(\"goog.labs.userAgent.highEntropy.highEntropyValue\");\n  var util = goog.require(\"goog.labs.userAgent.util\");\n  var $jscomp$destructuring$var9 = goog.require(\"goog.string.internal\");\n  var compareVersions = $jscomp$destructuring$var9.compareVersions;\n  var AsyncValue = function() {\n  };\n  AsyncValue.prototype.getIfLoaded = function() {\n  };\n  AsyncValue.prototype.load = function() {\n  };\n  exports.AsyncValue = AsyncValue;\n  var HighEntropyValue = function(key) {\n    this.key_ = key;\n    this.value_ = undefined;\n    this.promise_ = undefined;\n    this.pending_ = false;\n  };\n  HighEntropyValue.prototype.getIfLoaded = function() {\n    var userAgentData = util.getUserAgentData();\n    if (!userAgentData) {\n      return undefined;\n    }\n    return this.value_;\n  };\n  HighEntropyValue.prototype.load = function() {\n    var $jscomp$async$this = this;\n    var userAgentData;\n    return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context$949581286$15) {\n      if ($jscomp$generator$context$949581286$15.nextAddress == 1) {\n        userAgentData = util.getUserAgentData();\n        if (!userAgentData) {\n          return $jscomp$generator$context$949581286$15.return(undefined);\n        }\n        if (!$jscomp$async$this.promise_) {\n          $jscomp$async$this.pending_ = true;\n          $jscomp$async$this.promise_ = function() {\n            var dataValues;\n            return $jscomp.asyncExecutePromiseGeneratorProgram(function($jscomp$generator$context$949581286$14) {\n              if ($jscomp$generator$context$949581286$14.nextAddress == 1) {\n                $jscomp$generator$context$949581286$14.setFinallyBlock(2);\n                return $jscomp$generator$context$949581286$14.yield(userAgentData.getHighEntropyValues([$jscomp$async$this.key_]), 4);\n              }\n              if ($jscomp$generator$context$949581286$14.nextAddress != 2) {\n                dataValues = $jscomp$generator$context$949581286$14.yieldResult;\n                $jscomp$async$this.value_ = dataValues[$jscomp$async$this.key_];\n                return $jscomp$generator$context$949581286$14.return($jscomp$async$this.value_);\n              }\n              $jscomp$generator$context$949581286$14.enterFinallyBlock();\n              $jscomp$async$this.pending_ = false;\n              return $jscomp$generator$context$949581286$14.leaveFinallyBlock(0);\n            });\n          }();\n        }\n        return $jscomp$generator$context$949581286$15.yield($jscomp$async$this.promise_, 2);\n      }\n      return $jscomp$generator$context$949581286$15.return($jscomp$generator$context$949581286$15.yieldResult);\n    });\n  };\n  HighEntropyValue.prototype.resetForTesting = function() {\n    if (this.pending_) {\n      throw new Error(\"Unsafe call to resetForTesting\");\n    }\n    this.promise_ = undefined;\n    this.value_ = undefined;\n    this.pending_ = false;\n  };\n  exports.HighEntropyValue = HighEntropyValue;\n  var Version = function(versionString) {\n    this.versionString_ = versionString;\n  };\n  Version.prototype.toVersionStringForLogging = function() {\n    return this.versionString_;\n  };\n  Version.prototype.isAtLeast = function(version) {\n    return compareVersions(this.versionString_, version) >= 0;\n  };\n  exports.Version = Version;\n  return exports;\n});\n","~:source","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Provides helper classes and objects to work with High Entropy\n * user agent values.\n */\n\ngoog.module('goog.labs.userAgent.highEntropy.highEntropyValue');\n\nconst util = goog.require('goog.labs.userAgent.util');\nconst {compareVersions} = goog.require('goog.string.internal');\n\n/**\n * Represents a value that can be asynchronously loaded.\n * @interface\n * @template VALUE_TYPE\n */\nclass AsyncValue {\n  /**\n   * Get the value represented by this AsyncValue instance, if it was\n   * previously requested.\n   * @return {VALUE_TYPE|undefined}\n   */\n  getIfLoaded() {}\n\n  /**\n   * Request the value represented by this AsyncValue instance.\n   * @return {!Promise<VALUE_TYPE>}\n   */\n  load() {}\n}\nexports.AsyncValue = AsyncValue;\n\n/**\n * Represents a high-entropy value.\n * High-entropy values must be specifically requested from the Promise-based\n * Client Hints API.\n * @template VALUE_TYPE The type of the value wrapped by this HighEntropyValue\n *     instance.\n * @implements {AsyncValue<VALUE_TYPE>}\n */\nclass HighEntropyValue {\n  /**\n   * Constructs a new HighEntropyValue instance.\n   * @param {string} key The name of the high-entropy value, used when\n   * requesting it from the browser.\n   */\n  constructor(key) {\n    /**\n     * The key used to request the high-entropy value from the browser.\n     * @const {string}\n     * @private\n     */\n    this.key_ = key;\n\n    /**\n     * The value represented by this HighEntropyValue instance. If it hasn't\n     * been successfully requested yet, its value will be undefined.\n     * @type {VALUE_TYPE|undefined}\n     * @protected\n     */\n    this.value_ = undefined;\n\n    /**\n     * The high-entropy value request. If it hasn't been requested yet, this\n     * value will be undefined.\n     * @type {!Promise<VALUE_TYPE>|undefined}\n     * @private\n     */\n    this.promise_ = undefined;\n\n    this.pending_ = false;\n  }\n\n  /**\n   * @return {VALUE_TYPE|undefined}\n   * @override\n   */\n  getIfLoaded() {\n    const userAgentData = util.getUserAgentData();\n    if (!userAgentData) {\n      return undefined;\n    }\n    return this.value_;\n  }\n\n  /**\n   * @return {!Promise<VALUE_TYPE>}\n   * @override\n   */\n  async load() {\n    const userAgentData = util.getUserAgentData();\n    if (!userAgentData) return undefined;\n    if (!this.promise_) {\n      this.pending_ = true;\n      this.promise_ = (async () => {\n        try {\n          const dataValues =\n              await userAgentData.getHighEntropyValues([this.key_]);\n          this.value_ =\n              /** @type {!Object<string, VALUE_TYPE>} */ (\n                  dataValues)[this.key_];\n          return this.value_;\n        } finally {\n          this.pending_ = false;\n        }\n      })();\n    }\n    return await this.promise_;\n  }\n\n  resetForTesting() {\n    if (this.pending_) {\n      // There is a pending request that may set this.value_ at any time.\n      // Therefore, it can't be guaranteed that this object is actually in a\n      // clean state.\n      throw new Error('Unsafe call to resetForTesting');\n    }\n    this.promise_ = undefined;\n    this.value_ = undefined;\n    this.pending_ = false;\n  }\n}\nexports.HighEntropyValue = HighEntropyValue;\n\n/**\n * An object that wraps a version string.\n * This allows for easy version comparisons.\n */\nclass Version {\n  /**\n   * @param {string} versionString The underlying version string.\n   */\n  constructor(versionString) {\n    /**\n     * @const {string}\n     * @private\n     */\n    this.versionString_ = versionString;\n  }\n\n  /**\n   * Returns the underlying version string.\n   * @return {string}\n   */\n  toVersionStringForLogging() {\n    return this.versionString_;\n  }\n\n  /**\n   * Returns true if the underlying version string is equal to or greater than\n   * the given version.\n   * @param {string} version The version to compare against.\n   * @return {boolean}\n   */\n  isAtLeast(version) {\n    return compareVersions(this.versionString_, version) >= 0;\n  }\n}\nexports.Version = Version;\n","~:compiled-at",1714504964629,"~:source-map-json","{\n\"version\":3,\n\"file\":\"goog.labs.useragent.highentropy.highentropyvalue.js\",\n\"lineCount\":82,\n\"mappings\":\"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\",\n\"sources\":[\"goog/labs/useragent/highentropy/highentropyvalue.js\"],\n\"sourcesContent\":[\"/**\\n * @license\\n * Copyright The Closure Library Authors.\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n\\n/**\\n * @fileoverview Provides helper classes and objects to work with High Entropy\\n * user agent values.\\n */\\n\\ngoog.module('goog.labs.userAgent.highEntropy.highEntropyValue');\\n\\nconst util = goog.require('goog.labs.userAgent.util');\\nconst {compareVersions} = goog.require('goog.string.internal');\\n\\n/**\\n * Represents a value that can be asynchronously loaded.\\n * @interface\\n * @template VALUE_TYPE\\n */\\nclass AsyncValue {\\n  /**\\n   * Get the value represented by this AsyncValue instance, if it was\\n   * previously requested.\\n   * @return {VALUE_TYPE|undefined}\\n   */\\n  getIfLoaded() {}\\n\\n  /**\\n   * Request the value represented by this AsyncValue instance.\\n   * @return {!Promise<VALUE_TYPE>}\\n   */\\n  load() {}\\n}\\nexports.AsyncValue = AsyncValue;\\n\\n/**\\n * Represents a high-entropy value.\\n * High-entropy values must be specifically requested from the Promise-based\\n * Client Hints API.\\n * @template VALUE_TYPE The type of the value wrapped by this HighEntropyValue\\n *     instance.\\n * @implements {AsyncValue<VALUE_TYPE>}\\n */\\nclass HighEntropyValue {\\n  /**\\n   * Constructs a new HighEntropyValue instance.\\n   * @param {string} key The name of the high-entropy value, used when\\n   * requesting it from the browser.\\n   */\\n  constructor(key) {\\n    /**\\n     * The key used to request the high-entropy value from the browser.\\n     * @const {string}\\n     * @private\\n     */\\n    this.key_ = key;\\n\\n    /**\\n     * The value represented by this HighEntropyValue instance. If it hasn't\\n     * been successfully requested yet, its value will be undefined.\\n     * @type {VALUE_TYPE|undefined}\\n     * @protected\\n     */\\n    this.value_ = undefined;\\n\\n    /**\\n     * The high-entropy value request. If it hasn't been requested yet, this\\n     * value will be undefined.\\n     * @type {!Promise<VALUE_TYPE>|undefined}\\n     * @private\\n     */\\n    this.promise_ = undefined;\\n\\n    this.pending_ = false;\\n  }\\n\\n  /**\\n   * @return {VALUE_TYPE|undefined}\\n   * @override\\n   */\\n  getIfLoaded() {\\n    const userAgentData = util.getUserAgentData();\\n    if (!userAgentData) {\\n      return undefined;\\n    }\\n    return this.value_;\\n  }\\n\\n  /**\\n   * @return {!Promise<VALUE_TYPE>}\\n   * @override\\n   */\\n  async load() {\\n    const userAgentData = util.getUserAgentData();\\n    if (!userAgentData) return undefined;\\n    if (!this.promise_) {\\n      this.pending_ = true;\\n      this.promise_ = (async () => {\\n        try {\\n          const dataValues =\\n              await userAgentData.getHighEntropyValues([this.key_]);\\n          this.value_ =\\n              /** @type {!Object<string, VALUE_TYPE>} */ (\\n                  dataValues)[this.key_];\\n          return this.value_;\\n        } finally {\\n          this.pending_ = false;\\n        }\\n      })();\\n    }\\n    return await this.promise_;\\n  }\\n\\n  resetForTesting() {\\n    if (this.pending_) {\\n      // There is a pending request that may set this.value_ at any time.\\n      // Therefore, it can't be guaranteed that this object is actually in a\\n      // clean state.\\n      throw new Error('Unsafe call to resetForTesting');\\n    }\\n    this.promise_ = undefined;\\n    this.value_ = undefined;\\n    this.pending_ = false;\\n  }\\n}\\nexports.HighEntropyValue = HighEntropyValue;\\n\\n/**\\n * An object that wraps a version string.\\n * This allows for easy version comparisons.\\n */\\nclass Version {\\n  /**\\n   * @param {string} versionString The underlying version string.\\n   */\\n  constructor(versionString) {\\n    /**\\n     * @const {string}\\n     * @private\\n     */\\n    this.versionString_ = versionString;\\n  }\\n\\n  /**\\n   * Returns the underlying version string.\\n   * @return {string}\\n   */\\n  toVersionStringForLogging() {\\n    return this.versionString_;\\n  }\\n\\n  /**\\n   * Returns true if the underlying version string is equal to or greater than\\n   * the given version.\\n   * @param {string} version The version to compare against.\\n   * @return {boolean}\\n   */\\n  isAtLeast(version) {\\n    return compareVersions(this.versionString_, version) >= 0;\\n  }\\n}\\nexports.Version = Version;\\n\"],\n\"names\":[\"goog\",\"module\",\"util\",\"require\",\"compareVersions\",\"AsyncValue\",\"getIfLoaded\",\"load\",\"exports\",\"HighEntropyValue\",\"constructor\",\"key\",\"key_\",\"value_\",\"undefined\",\"promise_\",\"pending_\",\"userAgentData\",\"getUserAgentData\",\"dataValues\",\"getHighEntropyValues\",\"resetForTesting\",\"Error\",\"Version\",\"versionString\",\"versionString_\",\"toVersionStringForLogging\",\"isAtLeast\",\"version\"]\n}\n"]