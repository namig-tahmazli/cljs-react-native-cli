["^ ","~:output",["^ ","~:js","goog.provide('re_frame.fx');\nre_frame.fx.kind = new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572);\nif(cljs.core.truth_((re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(re_frame.fx.kind) : re_frame.registrar.kinds.call(null, re_frame.fx.kind)))){\n} else {\nthrow (new Error(\"Assert failed: (re-frame.registrar/kinds kind)\"));\n}\nre_frame.fx.reg_fx = (function re_frame$fx$reg_fx(id,handler){\nreturn re_frame.registrar.register_handler(re_frame.fx.kind,id,handler);\n});\n/**\n * An interceptor whose `:after` actions the contents of `:effects`. As a result,\n *   this interceptor is Domino 3.\n * \n *   This interceptor is silently added (by reg-event-db etc) to the front of\n *   interceptor chains for all events.\n * \n *   For each key in `:effects` (a map), it calls the registered `effects handler`\n *   (see `reg-fx` for registration of effect handlers).\n * \n *   So, if `:effects` was:\n *    {:dispatch  [:hello 42]\n *     :db        {...}\n *     :undo      \"set flag\"}\n * \n *   it will call the registered effect handlers for each of the map's keys:\n *   `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n *   value for that key - so in the example above the effect handler for :dispatch\n *   will be given one arg `[:hello 42]`.\n * \n *   You cannot rely on the ordering in which effects are executed, other than that\n *   `:db` is guaranteed to be executed first.\n */\nre_frame.fx.do_fx = re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"do-fx\",\"do-fx\",1194163050),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function re_frame$fx$do_fx_after(context){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__20018 = re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__20019 = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"event\",\"do-fx\",\"event/do-fx\",1357330452)], null));\n(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__20019);\n\ntry{try{var effects = new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\nvar effects_without_db = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(effects,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar temp__5804__auto___20116 = new cljs.core.Keyword(null,\"db\",\"db\",993250759).cljs$core$IFn$_invoke$arity$1(effects);\nif(cljs.core.truth_(temp__5804__auto___20116)){\nvar new_db_20117 = temp__5804__auto___20116;\nvar fexpr__20021_20118 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,new cljs.core.Keyword(null,\"db\",\"db\",993250759),false);\n(fexpr__20021_20118.cljs$core$IFn$_invoke$arity$1 ? fexpr__20021_20118.cljs$core$IFn$_invoke$arity$1(new_db_20117) : fexpr__20021_20118.call(null, new_db_20117));\n} else {\n}\n\nvar seq__20023 = cljs.core.seq(effects_without_db);\nvar chunk__20024 = null;\nvar count__20025 = (0);\nvar i__20026 = (0);\nwhile(true){\nif((i__20026 < count__20025)){\nvar vec__20037 = chunk__20024.cljs$core$IIndexed$_nth$arity$2(null, i__20026);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20037,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20037,(1),null);\nvar temp__5802__auto___20119 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5802__auto___20119)){\nvar effect_fn_20120 = temp__5802__auto___20119;\n(effect_fn_20120.cljs$core$IFn$_invoke$arity$1 ? effect_fn_20120.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_20120.call(null, effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\",((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"event\",\"event\",301435442),effect_key))?[\"You may be trying to return a coeffect map from an event-fx handler. \",\"See https://day8.github.io/re-frame/use-cofx-as-fx/\"].join(''):null)], 0));\n}\n\n\nvar G__20121 = seq__20023;\nvar G__20122 = chunk__20024;\nvar G__20123 = count__20025;\nvar G__20124 = (i__20026 + (1));\nseq__20023 = G__20121;\nchunk__20024 = G__20122;\ncount__20025 = G__20123;\ni__20026 = G__20124;\ncontinue;\n} else {\nvar temp__5804__auto__ = cljs.core.seq(seq__20023);\nif(temp__5804__auto__){\nvar seq__20023__$1 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__20023__$1)){\nvar c__5525__auto__ = cljs.core.chunk_first(seq__20023__$1);\nvar G__20125 = cljs.core.chunk_rest(seq__20023__$1);\nvar G__20126 = c__5525__auto__;\nvar G__20127 = cljs.core.count(c__5525__auto__);\nvar G__20128 = (0);\nseq__20023 = G__20125;\nchunk__20024 = G__20126;\ncount__20025 = G__20127;\ni__20026 = G__20128;\ncontinue;\n} else {\nvar vec__20042 = cljs.core.first(seq__20023__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20042,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20042,(1),null);\nvar temp__5802__auto___20129 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5802__auto___20129)){\nvar effect_fn_20130 = temp__5802__auto___20129;\n(effect_fn_20130.cljs$core$IFn$_invoke$arity$1 ? effect_fn_20130.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_20130.call(null, effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\",((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"event\",\"event\",301435442),effect_key))?[\"You may be trying to return a coeffect map from an event-fx handler. \",\"See https://day8.github.io/re-frame/use-cofx-as-fx/\"].join(''):null)], 0));\n}\n\n\nvar G__20131 = cljs.core.next(seq__20023__$1);\nvar G__20132 = null;\nvar G__20133 = (0);\nvar G__20134 = (0);\nseq__20023 = G__20131;\nchunk__20024 = G__20132;\ncount__20025 = G__20133;\ni__20026 = G__20134;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__19608__auto___20135 = re_frame.interop.now();\nvar duration__19609__auto___20136 = (end__19608__auto___20135 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__19609__auto___20136,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__19608__auto___20135);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__20018);\n}} else {\nvar effects = new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context);\nvar effects_without_db = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(effects,new cljs.core.Keyword(null,\"db\",\"db\",993250759));\nvar temp__5804__auto___20137 = new cljs.core.Keyword(null,\"db\",\"db\",993250759).cljs$core$IFn$_invoke$arity$1(effects);\nif(cljs.core.truth_(temp__5804__auto___20137)){\nvar new_db_20138 = temp__5804__auto___20137;\nvar fexpr__20047_20139 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,new cljs.core.Keyword(null,\"db\",\"db\",993250759),false);\n(fexpr__20047_20139.cljs$core$IFn$_invoke$arity$1 ? fexpr__20047_20139.cljs$core$IFn$_invoke$arity$1(new_db_20138) : fexpr__20047_20139.call(null, new_db_20138));\n} else {\n}\n\nvar seq__20048 = cljs.core.seq(effects_without_db);\nvar chunk__20049 = null;\nvar count__20050 = (0);\nvar i__20051 = (0);\nwhile(true){\nif((i__20051 < count__20050)){\nvar vec__20059 = chunk__20049.cljs$core$IIndexed$_nth$arity$2(null, i__20051);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20059,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20059,(1),null);\nvar temp__5802__auto___20140 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5802__auto___20140)){\nvar effect_fn_20141 = temp__5802__auto___20140;\n(effect_fn_20141.cljs$core$IFn$_invoke$arity$1 ? effect_fn_20141.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_20141.call(null, effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\",((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"event\",\"event\",301435442),effect_key))?[\"You may be trying to return a coeffect map from an event-fx handler. \",\"See https://day8.github.io/re-frame/use-cofx-as-fx/\"].join(''):null)], 0));\n}\n\n\nvar G__20142 = seq__20048;\nvar G__20143 = chunk__20049;\nvar G__20144 = count__20050;\nvar G__20145 = (i__20051 + (1));\nseq__20048 = G__20142;\nchunk__20049 = G__20143;\ncount__20050 = G__20144;\ni__20051 = G__20145;\ncontinue;\n} else {\nvar temp__5804__auto__ = cljs.core.seq(seq__20048);\nif(temp__5804__auto__){\nvar seq__20048__$1 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__20048__$1)){\nvar c__5525__auto__ = cljs.core.chunk_first(seq__20048__$1);\nvar G__20147 = cljs.core.chunk_rest(seq__20048__$1);\nvar G__20148 = c__5525__auto__;\nvar G__20149 = cljs.core.count(c__5525__auto__);\nvar G__20150 = (0);\nseq__20048 = G__20147;\nchunk__20049 = G__20148;\ncount__20050 = G__20149;\ni__20051 = G__20150;\ncontinue;\n} else {\nvar vec__20064 = cljs.core.first(seq__20048__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20064,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20064,(1),null);\nvar temp__5802__auto___20152 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5802__auto___20152)){\nvar effect_fn_20153 = temp__5802__auto___20152;\n(effect_fn_20153.cljs$core$IFn$_invoke$arity$1 ? effect_fn_20153.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_20153.call(null, effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect:\",effect_key,\". Ignoring.\",((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"event\",\"event\",301435442),effect_key))?[\"You may be trying to return a coeffect map from an event-fx handler. \",\"See https://day8.github.io/re-frame/use-cofx-as-fx/\"].join(''):null)], 0));\n}\n\n\nvar G__20154 = cljs.core.next(seq__20048__$1);\nvar G__20155 = null;\nvar G__20156 = (0);\nvar G__20157 = (0);\nseq__20048 = G__20154;\nchunk__20049 = G__20155;\ncount__20050 = G__20156;\ni__20051 = G__20157;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n})], 0));\nre_frame.fx.dispatch_later = (function re_frame$fx$dispatch_later(p__20068){\nvar map__20069 = p__20068;\nvar map__20069__$1 = cljs.core.__destructure_map(map__20069);\nvar effect = map__20069__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20069__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20069__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nreturn re_frame.interop.set_timeout_BANG_((function (){\nreturn re_frame.router.dispatch(dispatch);\n}),ms);\n}\n});\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-later\",\"dispatch-later\",291951390),(function (value){\nif(cljs.core.map_QMARK_(value)){\nreturn re_frame.fx.dispatch_later(value);\n} else {\nvar seq__20078 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__20079 = null;\nvar count__20080 = (0);\nvar i__20081 = (0);\nwhile(true){\nif((i__20081 < count__20080)){\nvar effect = chunk__20079.cljs$core$IIndexed$_nth$arity$2(null, i__20081);\nre_frame.fx.dispatch_later(effect);\n\n\nvar G__20160 = seq__20078;\nvar G__20161 = chunk__20079;\nvar G__20162 = count__20080;\nvar G__20163 = (i__20081 + (1));\nseq__20078 = G__20160;\nchunk__20079 = G__20161;\ncount__20080 = G__20162;\ni__20081 = G__20163;\ncontinue;\n} else {\nvar temp__5804__auto__ = cljs.core.seq(seq__20078);\nif(temp__5804__auto__){\nvar seq__20078__$1 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__20078__$1)){\nvar c__5525__auto__ = cljs.core.chunk_first(seq__20078__$1);\nvar G__20164 = cljs.core.chunk_rest(seq__20078__$1);\nvar G__20165 = c__5525__auto__;\nvar G__20166 = cljs.core.count(c__5525__auto__);\nvar G__20167 = (0);\nseq__20078 = G__20164;\nchunk__20079 = G__20165;\ncount__20080 = G__20166;\ni__20081 = G__20167;\ncontinue;\n} else {\nvar effect = cljs.core.first(seq__20078__$1);\nre_frame.fx.dispatch_later(effect);\n\n\nvar G__20168 = cljs.core.next(seq__20078__$1);\nvar G__20169 = null;\nvar G__20170 = (0);\nvar G__20171 = (0);\nseq__20078 = G__20168;\nchunk__20079 = G__20169;\ncount__20080 = G__20170;\ni__20081 = G__20171;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572),(function (seq_of_effects){\nif((!(cljs.core.sequential_QMARK_(seq_of_effects)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect expects a seq, but was given \",cljs.core.type(seq_of_effects)], 0));\n} else {\nvar seq__20090 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,seq_of_effects));\nvar chunk__20091 = null;\nvar count__20092 = (0);\nvar i__20093 = (0);\nwhile(true){\nif((i__20093 < count__20092)){\nvar vec__20100 = chunk__20091.cljs$core$IIndexed$_nth$arity$2(null, i__20093);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20100,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20100,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"db\",\"db\",993250759),effect_key)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect should not contain a :db effect\"], 0));\n} else {\n}\n\nvar temp__5802__auto___20172 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5802__auto___20172)){\nvar effect_fn_20173 = temp__5802__auto___20172;\n(effect_fn_20173.cljs$core$IFn$_invoke$arity$1 ? effect_fn_20173.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_20173.call(null, effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: in \\\":fx\\\" effect found \",effect_key,\" which has no associated handler. Ignoring.\"], 0));\n}\n\n\nvar G__20174 = seq__20090;\nvar G__20175 = chunk__20091;\nvar G__20176 = count__20092;\nvar G__20177 = (i__20093 + (1));\nseq__20090 = G__20174;\nchunk__20091 = G__20175;\ncount__20092 = G__20176;\ni__20093 = G__20177;\ncontinue;\n} else {\nvar temp__5804__auto__ = cljs.core.seq(seq__20090);\nif(temp__5804__auto__){\nvar seq__20090__$1 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__20090__$1)){\nvar c__5525__auto__ = cljs.core.chunk_first(seq__20090__$1);\nvar G__20178 = cljs.core.chunk_rest(seq__20090__$1);\nvar G__20179 = c__5525__auto__;\nvar G__20180 = cljs.core.count(c__5525__auto__);\nvar G__20181 = (0);\nseq__20090 = G__20178;\nchunk__20091 = G__20179;\ncount__20092 = G__20180;\ni__20093 = G__20181;\ncontinue;\n} else {\nvar vec__20103 = cljs.core.first(seq__20090__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20103,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20103,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"db\",\"db\",993250759),effect_key)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: \\\":fx\\\" effect should not contain a :db effect\"], 0));\n} else {\n}\n\nvar temp__5802__auto___20183 = re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5802__auto___20183)){\nvar effect_fn_20184 = temp__5802__auto___20183;\n(effect_fn_20184.cljs$core$IFn$_invoke$arity$1 ? effect_fn_20184.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_20184.call(null, effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: in \\\":fx\\\" effect found \",effect_key,\" which has no associated handler. Ignoring.\"], 0));\n}\n\n\nvar G__20186 = cljs.core.next(seq__20090__$1);\nvar G__20187 = null;\nvar G__20188 = (0);\nvar G__20189 = (0);\nseq__20090 = G__20186;\nchunk__20091 = G__20187;\ncount__20092 = G__20188;\ni__20093 = G__20189;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),(function (value){\nif((!(cljs.core.vector_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\",value], 0));\n} else {\nreturn re_frame.router.dispatch(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-n\",\"dispatch-n\",-504469236),(function (value){\nif((!(cljs.core.sequential_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\",value], 0));\n} else {\nvar seq__20106 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__20107 = null;\nvar count__20108 = (0);\nvar i__20109 = (0);\nwhile(true){\nif((i__20109 < count__20108)){\nvar event = chunk__20107.cljs$core$IIndexed$_nth$arity$2(null, i__20109);\nre_frame.router.dispatch(event);\n\n\nvar G__20190 = seq__20106;\nvar G__20191 = chunk__20107;\nvar G__20192 = count__20108;\nvar G__20193 = (i__20109 + (1));\nseq__20106 = G__20190;\nchunk__20107 = G__20191;\ncount__20108 = G__20192;\ni__20109 = G__20193;\ncontinue;\n} else {\nvar temp__5804__auto__ = cljs.core.seq(seq__20106);\nif(temp__5804__auto__){\nvar seq__20106__$1 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__20106__$1)){\nvar c__5525__auto__ = cljs.core.chunk_first(seq__20106__$1);\nvar G__20194 = cljs.core.chunk_rest(seq__20106__$1);\nvar G__20195 = c__5525__auto__;\nvar G__20196 = cljs.core.count(c__5525__auto__);\nvar G__20197 = (0);\nseq__20106 = G__20194;\nchunk__20107 = G__20195;\ncount__20108 = G__20196;\ni__20109 = G__20197;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__20106__$1);\nre_frame.router.dispatch(event);\n\n\nvar G__20199 = cljs.core.next(seq__20106__$1);\nvar G__20200 = null;\nvar G__20201 = (0);\nvar G__20202 = (0);\nseq__20106 = G__20199;\nchunk__20107 = G__20200;\ncount__20108 = G__20201;\ni__20109 = G__20202;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"deregister-event-handler\",\"deregister-event-handler\",-1096518994),(function (value){\nvar clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_frame.registrar.clear_handlers,re_frame.events.kind);\nif(cljs.core.sequential_QMARK_(value)){\nvar seq__20110 = cljs.core.seq(value);\nvar chunk__20111 = null;\nvar count__20112 = (0);\nvar i__20113 = (0);\nwhile(true){\nif((i__20113 < count__20112)){\nvar event = chunk__20111.cljs$core$IIndexed$_nth$arity$2(null, i__20113);\nclear_event(event);\n\n\nvar G__20204 = seq__20110;\nvar G__20205 = chunk__20111;\nvar G__20206 = count__20112;\nvar G__20207 = (i__20113 + (1));\nseq__20110 = G__20204;\nchunk__20111 = G__20205;\ncount__20112 = G__20206;\ni__20113 = G__20207;\ncontinue;\n} else {\nvar temp__5804__auto__ = cljs.core.seq(seq__20110);\nif(temp__5804__auto__){\nvar seq__20110__$1 = temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__20110__$1)){\nvar c__5525__auto__ = cljs.core.chunk_first(seq__20110__$1);\nvar G__20208 = cljs.core.chunk_rest(seq__20110__$1);\nvar G__20209 = c__5525__auto__;\nvar G__20210 = cljs.core.count(c__5525__auto__);\nvar G__20211 = (0);\nseq__20110 = G__20208;\nchunk__20111 = G__20209;\ncount__20112 = G__20210;\ni__20113 = G__20211;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__20110__$1);\nclear_event(event);\n\n\nvar G__20212 = cljs.core.next(seq__20110__$1);\nvar G__20213 = null;\nvar G__20214 = (0);\nvar G__20215 = (0);\nseq__20110 = G__20212;\nchunk__20111 = G__20213;\ncount__20112 = G__20214;\ni__20113 = G__20215;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn clear_event(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\"db\",\"db\",993250759),(function (value){\nif((!((cljs.core.deref(re_frame.db.app_db) === value)))){\nreturn cljs.core.reset_BANG_(re_frame.db.app_db,value);\n} else {\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__20114 = re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__20115 = re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"op-type\",\"op-type\",-1636141668),new cljs.core.Keyword(\"reagent\",\"quiescent\",\"reagent/quiescent\",-16138681)], null));\n(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__temp_val__20115);\n\ntry{try{return null;\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__19608__auto___20218 = re_frame.interop.now();\nvar duration__19609__auto___20219 = (end__19608__auto___20218 - new cljs.core.Keyword(null,\"start\",\"start\",-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\"duration\",\"duration\",1444101068),duration__19609__auto___20219,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"end\",\"end\",-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__19608__auto___20218);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ = _STAR_current_trace_STAR__orig_val__20114);\n}} else {\nreturn null;\n}\n}\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_frame/fx.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$shadow.js.shim.module$react"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-frame.fx","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$re-frame.interop","^N","~$re-frame.interceptor","^O","~$re-frame.events","^P","~$re-frame.trace","^Q","~$re-frame.registrar","^R","~$cljs.core","^S","~$goog","^T","~$router","~$re-frame.router","^V","^V","~$trace","^Q","~$events","^P","~$re-frame.loggers","^Y","~$re-frame.db","^Z"],"~:seen",["^F",["~:require"]],"~:uses",["^ ","~$app-db","^Z","~$->interceptor","^O","~$set-timeout!","^N","~$get-handler","^R","~$clear-handlers","^R","~$register-handler","^R","~$console","^Y"],"~:require-macros",["^ ","^Q","^Q","^W","^Q","^S","^S"],"~:form",["~#list",["~$ns","^H",["^1;",["^10",["^V","~:as","^U"],["^Z","~:refer",["^12"]],["^O","^1>",["^13"]],["^N","^1>",["^14"]],["^P","^1=","^X"],["^R","^1>",["^15","^16","^17"]],["^Y","^1>",["^18"]],["^Q","^1=","^W","~:include-macros",true]]]]],"~:flags",["^ ","^10",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^T","^S","^V","^Z","^O","^N","^P","^R","^Y","^Q"]],"^K","^H","~:resource-id",["~:shadow.build.classpath/resource","re_frame/fx.cljc"],"~:compiled-at",1714518262031,"^I",["^ ","^N","^N","^O","^O","^P","^P","^Q","^Q","^R","^R","^S","^S","^T","^T","^U","^V","^V","^V","^W","^Q","^X","^P","^Y","^Y","^Z","^Z"],"~:resource-name","re_frame/fx.cljc","~:warnings",[],"~:source","(ns re-frame.fx\n  (:require\n   [re-frame.router      :as router]\n   [re-frame.db          :refer [app-db]]\n   [re-frame.interceptor :refer [->interceptor]]\n   [re-frame.interop     :refer [set-timeout!]]\n   [re-frame.events      :as events]\n   [re-frame.registrar   :refer [get-handler clear-handlers register-handler]]\n   [re-frame.loggers     :refer [console]]\n   [re-frame.trace :as trace :include-macros true]))\n\n;; -- Registration ------------------------------------------------------------\n\n(def kind :fx)\n(assert (re-frame.registrar/kinds kind))\n\n(defn reg-fx\n  [id handler]\n  (register-handler kind id handler))\n\n;; -- Interceptor -------------------------------------------------------------\n\n(def do-fx\n  \"An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \\\"set flag\\\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed, other than that\n  `:db` is guaranteed to be executed first.\"\n  (->interceptor\n   :id :do-fx\n   :after (fn do-fx-after\n            [context]\n            (trace/with-trace\n              {:op-type :event/do-fx}\n              (let [effects            (:effects context)\n                    effects-without-db (dissoc effects :db)]\n                 ;; :db effect is guaranteed to be handled before all other effects.\n                (when-let [new-db (:db effects)]\n                  ((get-handler kind :db false) new-db))\n                (doseq [[effect-key effect-value] effects-without-db]\n                  (if-let [effect-fn (get-handler kind effect-key false)]\n                    (effect-fn effect-value)\n                    (console :warn\n                             \"re-frame: no handler registered for effect:\"\n                             effect-key\n                             \". Ignoring.\"\n                             (when (= :event effect-key)\n                               (str \"You may be trying to return a coeffect map from an event-fx handler. \"\n                                    \"See https://day8.github.io/re-frame/use-cofx-as-fx/\"))))))))))\n\n;; -- Builtin Effect Handlers  ------------------------------------------------\n\n;; :dispatch-later\n;;\n;; `dispatch` one or more events after given delays. Expects a collection\n;; of maps with two keys:  :`ms` and `:dispatch`\n;;\n;; usage:\n;;\n;;    {:dispatch-later [{:ms 200 :dispatch [:event-id \"param\"]}    ;;  in 200ms do this: (dispatch [:event-id \"param\"])\n;;                      {:ms 100 :dispatch [:also :this :in :100ms]}]}\n;;\n;; Note: nil entries in the collection are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-later [ (when (> 3 5) {:ms 200 :dispatch [:conditioned-out]})\n;;                       {:ms 100 :dispatch [:another-one]}]}\n;;\n(defn dispatch-later\n  [{:keys [ms dispatch] :as effect}]\n  (if (or (empty? dispatch) (not (number? ms)))\n    (console :error \"re-frame: ignoring bad :dispatch-later value:\" effect)\n    (set-timeout! #(router/dispatch dispatch) ms)))\n\n(reg-fx\n :dispatch-later\n (fn [value]\n   (if (map? value)\n     (dispatch-later value)\n     (doseq [effect (remove nil? value)]\n       (dispatch-later effect)))))\n\n;; :fx\n;;\n;; Handle one or more effects. Expects a collection of vectors (tuples) of the\n;; form [effect-key effect-value]. `nil` entries in the collection are ignored\n;; so effects can be added conditionally.\n;;\n;; usage:\n;;\n;; {:fx [[:dispatch [:event-id \"param\"]]\n;;       nil\n;;       [:http-xhrio {:method :post\n;;                     ...}]]}\n;;\n\n(reg-fx\n :fx\n (fn [seq-of-effects]\n   (if-not (sequential? seq-of-effects)\n     (console :warn \"re-frame: \\\":fx\\\" effect expects a seq, but was given \" (type seq-of-effects))\n     (doseq [[effect-key effect-value] (remove nil? seq-of-effects)]\n       (when (= :db effect-key)\n         (console :warn \"re-frame: \\\":fx\\\" effect should not contain a :db effect\"))\n       (if-let [effect-fn (get-handler kind effect-key false)]\n         (effect-fn effect-value)\n         (console :warn \"re-frame: in \\\":fx\\\" effect found \" effect-key \" which has no associated handler. Ignoring.\"))))))\n\n;; :dispatch\n;;\n;; `dispatch` one event. Expects a single vector.\n;;\n;; usage:\n;;   {:dispatch [:event-id \"param\"] }\n\n(reg-fx\n :dispatch\n (fn [value]\n   (if-not (vector? value)\n     (console :error \"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\" value)\n     (router/dispatch value))))\n\n;; :dispatch-n\n;;\n;; `dispatch` more than one event. Expects a list or vector of events. Something for which\n;; sequential? returns true.\n;;\n;; usage:\n;;   {:dispatch-n (list [:do :all] [:three :of] [:these])}\n;;\n;; Note: nil events are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-n (list (when (> 3 5) [:conditioned-out])\n;;                       [:another-one])}\n;;\n(reg-fx\n :dispatch-n\n (fn [value]\n   (if-not (sequential? value)\n     (console :error \"re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\" value)\n     (doseq [event (remove nil? value)] (router/dispatch event)))))\n\n;; :deregister-event-handler\n;;\n;; removes a previously registered event handler. Expects either a single id (\n;; typically a namespaced keyword), or a seq of ids.\n;;\n;; usage:\n;;   {:deregister-event-handler :my-id)}\n;; or:\n;;   {:deregister-event-handler [:one-id :another-id]}\n;;\n(reg-fx\n :deregister-event-handler\n (fn [value]\n   (let [clear-event (partial clear-handlers events/kind)]\n     (if (sequential? value)\n       (doseq [event value] (clear-event event))\n       (clear-event value)))))\n\n;; :db\n;;\n;; reset! app-db with a new value. `value` is expected to be a map.\n;;\n;; usage:\n;;   {:db  {:key1 value1 key2 value2}}\n;;\n(reg-fx\n :db\n (fn [value]\n   (if-not (identical? @app-db value)\n     (reset! app-db value)\n     (trace/with-trace {:op-type :reagent/quiescent}))))\n\n","~:reader-features",["^F",["~:cljs"]],"~:used-var-namespaces",["^F",["^N","^O","^P","^Q","^H","^R","^S","~$js","^V","^Y","^Z"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";AAaA,mBAAA,nBAAKA;AACL,oBAAQ,CAACE,yDAAAA,2EAAAA,pBAAyBF,wDAAAA;AAAlC;AAAA,AAAA,MAAA,KAAAC,MAAA;;AAEA,qBAAA,rBAAME,kDACHC,GAAGC;AADN,AAEE,OAACC,oCAAiBN,iBAAKI,GAAGC;;AAI5B;;;;;;;;;;;;;;;;;;;;;;;AAAKE,oBAsBH,6HAAA,kDAAA,uDAAA,tOAACC,4RAEO,kCACGC;AADH,AAEE,GAAA,AAAAC;AAAA,IAAAC,4CAAAC;IAAAC,4CAAA,AAAAC,2BAAA,2CAAA,4DAAA;AAAA,AAAA,CAAAF,2CAAAC;;AAAA,IAAA,AAAA,IAAA,AAEE,IAAMU,UAAmB,AAAA,yFAAUd;IAC7Be,qBAAmB,uDAAA,vDAACC,+CAAOF;AADjC,AAGE,IAAAG,2BAAkB,AAAA,8EAAKH;AAAvB,AAAA,oBAAAG;AAAA,AAAA,mBAAAA,fAAWC;AAAX,AACE,IAAAC,qBAAC,8EAAA,gDAAA,9HAACE,6DAAY9B;AAAd,AAAA,CAAA4B,mDAAAA,iEAAAA,hBAA8BD,8CAAAA;;AADhC;;AAEA,IAAAI,aAAA,AAAAC,cAAkCR;IAAlCS,eAAA;IAAAC,eAAA;IAAAC,WAAA;;AAAA,AAAA,GAAA,AAAA,CAAAA,WAAAD;AAAA,IAAAE,aAAA,AAAAH,mDAAAE;iBAAA,AAAAE,4CAAAD,WAAA,IAAA,xEAASgB;mBAAT,AAAAf,4CAAAD,WAAA,IAAA,1EAAoBiB;AAApB,AAAA,AACE,IAAAC,2BAAmB,yFAAA,zFAACxB,6DAAY9B,iBAAKoD;AAArC,AAAA,oBAAAE;AAAA,sBAAAA,lBAASC;AAAT,AACE,CAACA,gDAAAA,8DAAAA,hBAAUF,2CAAAA;;AACX,8DAAA,uGAAA,yDAAA,9NAACG,mNAEQJ,yBAEA,kHAAA,yIAAA,zPAAM,6CAAA,7CAACK,mGAASL,aACd,CAAA,wEAAA;;;AARf;AAAA,eAAArB;eAAAE;eAAAC;eAAA,CAAAC,WAAA;;;;;;;AAAA,IAAAT,qBAAA,AAAAM,cAAAD;AAAA,AAAA,GAAAL;AAAA,AAAA,IAAAK,iBAAAL;AAAA,AAAA,GAAA,AAAAY,6BAAAP;AAAA,IAAAQ,kBAAA,AAAAC,sBAAAT;AAAA,AAAA,eAAA,AAAAU,qBAAAV;eAAAQ;eAAA,AAAAG,gBAAAH;eAAA;;;;;;;AAAA,IAAAI,aAAA,AAAAC,gBAAAb;iBAAA,AAAAM,4CAAAM,WAAA,IAAA,xEAASS;mBAAT,AAAAf,4CAAAM,WAAA,IAAA,1EAAoBU;AAApB,AAAA,AACE,IAAAC,2BAAmB,yFAAA,zFAACxB,6DAAY9B,iBAAKoD;AAArC,AAAA,oBAAAE;AAAA,sBAAAA,lBAASC;AAAT,AACE,CAACA,gDAAAA,8DAAAA,hBAAUF,2CAAAA;;AACX,8DAAA,uGAAA,yDAAA,9NAACG,mNAEQJ,yBAEA,kHAAA,yIAAA,zPAAM,6CAAA,7CAACK,mGAASL,aACd,CAAA,wEAAA;;;AARf;AAAA,eAAA,AAAAP,eAAAd;eAAA;eAAA;eAAA;;;;;;;;AAAA;;;;;UAPJ,AAAA,GAAA,AAAArB;AAAA,AAAA,IAAAK,2BAAA,AAAAC;IAAAC,gCAAA,CAAAF,2BAAA,AAAA,qFAAAH;AAAA,AAAA,AAAAM,mDAAAC,sBAAAC,eAAA,AAAAC,qDAAAT,yCAAA,6DAAAK,gFAAA,mDAAA,AAAAD;;AAAA,AAAAM,2CAAAP;;AAAA;WAAA,AAAA,CAAAH,2CAAAD;;AAAA,AAEE,IAAMY,UAAmB,AAAA,yFAAUd;IAC7Be,qBAAmB,uDAAA,vDAACC,+CAAOF;AADjC,AAGE,IAAAG,2BAAkB,AAAA,8EAAKH;AAAvB,AAAA,oBAAAG;AAAA,AAAA,mBAAAA,fAAWC;AAAX,AACE,IAAAE,qBAAC,8EAAA,gDAAA,9HAACC,6DAAY9B;AAAd,AAAA,CAAA6B,mDAAAA,iEAAAA,hBAA8BF,8CAAAA;;AADhC;;AAEA,IAAAmB,aAAA,AAAAd,cAAkCR;IAAlCuB,eAAA;IAAAC,eAAA;IAAAC,WAAA;;AAAA,AAAA,GAAA,AAAA,CAAAA,WAAAD;AAAA,IAAAE,aAAA,AAAAH,mDAAAE;iBAAA,AAAAZ,4CAAAa,WAAA,IAAA,xEAASE;mBAAT,AAAAf,4CAAAa,WAAA,IAAA,1EAAoBG;AAApB,AAAA,AACE,IAAAC,2BAAmB,yFAAA,zFAACxB,6DAAY9B,iBAAKoD;AAArC,AAAA,oBAAAE;AAAA,sBAAAA,lBAASC;AAAT,AACE,CAACA,gDAAAA,8DAAAA,hBAAUF,2CAAAA;;AACX,8DAAA,uGAAA,yDAAA,9NAACG,mNAEQJ,yBAEA,kHAAA,yIAAA,zPAAM,6CAAA,7CAACK,mGAASL,aACd,CAAA,wEAAA;;;AARf;AAAA,eAAAN;eAAAC;eAAAC;eAAA,CAAAC,WAAA;;;;;;;AAAA,IAAAvB,qBAAA,AAAAM,cAAAc;AAAA,AAAA,GAAApB;AAAA,AAAA,IAAAoB,iBAAApB;AAAA,AAAA,GAAA,AAAAY,6BAAAQ;AAAA,IAAAP,kBAAA,AAAAC,sBAAAM;AAAA,AAAA,eAAA,AAAAL,qBAAAK;eAAAP;eAAA,AAAAG,gBAAAH;eAAA;;;;;;;AAAA,IAAAY,aAAA,AAAAP,gBAAAE;iBAAA,AAAAT,4CAAAc,WAAA,IAAA,xEAASC;mBAAT,AAAAf,4CAAAc,WAAA,IAAA,1EAAoBE;AAApB,AAAA,AACE,IAAAC,2BAAmB,yFAAA,zFAACxB,6DAAY9B,iBAAKoD;AAArC,AAAA,oBAAAE;AAAA,sBAAAA,lBAASC;AAAT,AACE,CAACA,gDAAAA,8DAAAA,hBAAUF,2CAAAA;;AACX,8DAAA,uGAAA,yDAAA,9NAACG,mNAEQJ,yBAEA,kHAAA,yIAAA,zPAAM,6CAAA,7CAACK,mGAASL,aACd,CAAA,wEAAA;;;AARf;AAAA,eAAA,AAAAP,eAAAC;eAAA;eAAA;eAAA;;;;;;;;AAAA;;;;;;;AA4BhB,6BAAA,qCAAAY,lEAAMI;AAAN,AAAA,IAAAH,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;aAAAA,TAC4BM;SAD5B,AAAAJ,4CAAAF,eAAA,hEACWI;eADX,AAAAF,4CAAAF,eAAA,tEACcK;AADd,AAEE,GAAI,EAAI,AAACE,uBAAOF,eAAU,GAAK,OAASD;AACtC,qEAAA,yGAAA,vKAACP,uNAA+DS;;AAChE,0CAAA,nCAACE;AAAD,AAAe,OAACC,yBAAgBJ;GAAUD;;;AAE9C,mBAAA,nBAAC5D,2FAEA,WAAKkE;AAAL,AACE,GAAI,AAACC,qBAAKD;AACR,OAACP,2BAAeO;;AAChB,IAAAE,aAAA,AAAAvC,cAAe,AAAC2C,+CAAOC,qBAAKP;IAA5BG,eAAA;IAAAC,eAAA;IAAAC,WAAA;;AAAA,AAAA,GAAA,AAAA,CAAAA,WAAAD;AAAA,aAAA,AAAAD,mDAAAE,5DAAQT;AAAR,AAAA,AACE,AAACH,2BAAeG;;AADlB;AAAA,eAAAM;eAAAC;eAAAC;eAAA,CAAAC,WAAA;;;;;;;AAAA,IAAAhD,qBAAA,AAAAM,cAAAuC;AAAA,AAAA,GAAA7C;AAAA,AAAA,IAAA6C,iBAAA7C;AAAA,AAAA,GAAA,AAAAY,6BAAAiC;AAAA,IAAAhC,kBAAA,AAAAC,sBAAA+B;AAAA,AAAA,eAAA,AAAA9B,qBAAA8B;eAAAhC;eAAA,AAAAG,gBAAAH;eAAA;;;;;;;AAAA,aAAA,AAAAK,gBAAA2B,zBAAQN;AAAR,AAAA,AACE,AAACH,2BAAeG;;AADlB;AAAA,eAAA,AAAApB,eAAA0B;eAAA;eAAA;eAAA;;;;;;;;AAAA;;;;;;;AAiBL,mBAAA,nBAACpE,qEAEA,WAAK0E;AAAL,AACE,GAAA,GAAQ,AAACC,4BAAYD;AACnB,qEAAA,uGAAA,rKAACrB,8NAAuE,AAACuB,eAAKF;;AAC9E,IAAAG,aAAA,AAAAhD,cAAkC,AAAC2C,+CAAOC,qBAAKC;IAA/CI,eAAA;IAAAC,eAAA;IAAAC,WAAA;;AAAA,AAAA,GAAA,AAAA,CAAAA,WAAAD;AAAA,IAAAE,aAAA,AAAAH,mDAAAE;iBAAA,AAAA9C,4CAAA+C,WAAA,IAAA,xEAAShC;mBAAT,AAAAf,4CAAA+C,WAAA,IAAA,1EAAoB/B;AAApB,AAAA,AACE,GAAM,6CAAA,7CAACI,6FAAML;AAAb,AACE,8DAAA,uGAAA,rKAACI;;AADH;;AAEA,IAAAF,2BAAmB,yFAAA,zFAACxB,6DAAY9B,iBAAKoD;AAArC,AAAA,oBAAAE;AAAA,sBAAAA,lBAASC;AAAT,AACE,CAACA,gDAAAA,8DAAAA,hBAAUF,2CAAAA;;AACX,8DAAA,uGAAA,gDAAA,rNAACG,0MAAmDJ;;;AALxD;AAAA,eAAA4B;eAAAC;eAAAC;eAAA,CAAAC,WAAA;;;;;;;AAAA,IAAAzD,qBAAA,AAAAM,cAAAgD;AAAA,AAAA,GAAAtD;AAAA,AAAA,IAAAsD,iBAAAtD;AAAA,AAAA,GAAA,AAAAY,6BAAA0C;AAAA,IAAAzC,kBAAA,AAAAC,sBAAAwC;AAAA,AAAA,eAAA,AAAAvC,qBAAAuC;eAAAzC;eAAA,AAAAG,gBAAAH;eAAA;;;;;;;AAAA,IAAA8C,aAAA,AAAAzC,gBAAAoC;iBAAA,AAAA3C,4CAAAgD,WAAA,IAAA,xEAASjC;mBAAT,AAAAf,4CAAAgD,WAAA,IAAA,1EAAoBhC;AAApB,AAAA,AACE,GAAM,6CAAA,7CAACI,6FAAML;AAAb,AACE,8DAAA,uGAAA,rKAACI;;AADH;;AAEA,IAAAF,2BAAmB,yFAAA,zFAACxB,6DAAY9B,iBAAKoD;AAArC,AAAA,oBAAAE;AAAA,sBAAAA,lBAASC;AAAT,AACE,CAACA,gDAAAA,8DAAAA,hBAAUF,2CAAAA;;AACX,8DAAA,uGAAA,gDAAA,rNAACG,0MAAmDJ;;;AALxD;AAAA,eAAA,AAAAP,eAAAmC;eAAA;eAAA;eAAA;;;;;;;;AAAA;;;;;;;AAcL,mBAAA,nBAAC7E,gFAEA,WAAKkE;AAAL,AACE,GAAA,GAAQ,AAACiB,wBAAQjB;AACf,qEAAA,yGAAA,vKAACb,6OAAqFa;;AACtF,OAACD,yBAAgBC;;;AAetB,mBAAA,nBAAClE,oFAEA,WAAKkE;AAAL,AACE,GAAA,GAAQ,AAACS,4BAAYT;AACnB,qEAAA,yGAAA,vKAACb,mPAA2Fa;;AAC5F,IAAAkB,aAAA,AAAAvD,cAAc,AAAC2C,+CAAOC,qBAAKP;IAA3BmB,eAAA;IAAAC,eAAA;IAAAC,WAAA;;AAAA,AAAA,GAAA,AAAA,CAAAA,WAAAD;AAAA,YAAA,AAAAD,mDAAAE,3DAAQC;AAAR,AAAA,AAAmC,AAACvB,yBAAgBuB;;AAApD;AAAA,eAAAJ;eAAAC;eAAAC;eAAA,CAAAC,WAAA;;;;;;;AAAA,IAAAhE,qBAAA,AAAAM,cAAAuD;AAAA,AAAA,GAAA7D;AAAA,AAAA,IAAA6D,iBAAA7D;AAAA,AAAA,GAAA,AAAAY,6BAAAiD;AAAA,IAAAhD,kBAAA,AAAAC,sBAAA+C;AAAA,AAAA,eAAA,AAAA9C,qBAAA8C;eAAAhD;eAAA,AAAAG,gBAAAH;eAAA;;;;;;;AAAA,YAAA,AAAAK,gBAAA2C,xBAAQI;AAAR,AAAA,AAAmC,AAACvB,yBAAgBuB;;AAApD;AAAA,eAAA,AAAA9C,eAAA0C;eAAA;eAAA;eAAA;;;;;;;;AAAA;;;;;;;AAYL,mBAAA,nBAACpF,iHAEA,WAAKkE;AAAL,AACE,IAAMuB,cAAY,AAACC,gDAAQC,kCAAeC;AAA1C,AACE,GAAI,AAACjB,4BAAYT;AACf,IAAA2B,aAAA,AAAAhE,cAAcqC;IAAd4B,eAAA;IAAAC,eAAA;IAAAC,WAAA;;AAAA,AAAA,GAAA,AAAA,CAAAA,WAAAD;AAAA,YAAA,AAAAD,mDAAAE,3DAAQR;AAAR,AAAA,AAAqB,AAACC,YAAYD;;AAAlC;AAAA,eAAAK;eAAAC;eAAAC;eAAA,CAAAC,WAAA;;;;;;;AAAA,IAAAzE,qBAAA,AAAAM,cAAAgE;AAAA,AAAA,GAAAtE;AAAA,AAAA,IAAAsE,iBAAAtE;AAAA,AAAA,GAAA,AAAAY,6BAAA0D;AAAA,IAAAzD,kBAAA,AAAAC,sBAAAwD;AAAA,AAAA,eAAA,AAAAvD,qBAAAuD;eAAAzD;eAAA,AAAAG,gBAAAH;eAAA;;;;;;;AAAA,YAAA,AAAAK,gBAAAoD,xBAAQL;AAAR,AAAA,AAAqB,AAACC,YAAYD;;AAAlC;AAAA,eAAA,AAAA9C,eAAAmD;eAAA;eAAA;eAAA;;;;;;;;AAAA;;;;;;AACA,OAACJ,YAAYvB;;;AASpB,mBAAA,nBAAClE,mEAEA,WAAKkE;AAAL,AACE,GAAA,GAAQ,CAAA,AAAA+B,gBAAaC,wBAAOhC;AAC1B,OAACiC,sBAAOD,mBAAOhC;;AACf,GAAA,AAAA3D;AAAA,IAAA6F,4CAAA3F;IAAA4F,4CAAA,AAAA1F,2BAAA,2CAAA,4DAAA;AAAA,AAAA,CAAAF,2CAAA4F;;AAAA,IAAA,AAAA,IAAA,AAAA;UAAA,AAAA,GAAA,AAAA9F;AAAA,AAAA,IAAAK,2BAAA,AAAAC;IAAAC,gCAAA,CAAAF,2BAAA,AAAA,qFAAAH;AAAA,AAAA,AAAAM,mDAAAC,sBAAAC,eAAA,AAAAC,qDAAAT,yCAAA,6DAAAK,gFAAA,mDAAA,AAAAD;;AAAA,AAAAM,2CAAAP;;AAAA;WAAA,AAAA,CAAAH,2CAAA2F;;AAAA,AAAA","names",["re-frame.fx/kind","js/Error","re-frame.registrar/kinds","re-frame.fx/reg-fx","id","handler","re-frame.registrar/register-handler","re-frame.fx/do-fx","re_frame.interceptor.__GT_interceptor","context","re-frame.trace/is-trace-enabled?","*current-trace*-orig-val__20018","re-frame.trace/*current-trace*","*current-trace*-temp-val__20019","re-frame.trace/start-trace","end__19608__auto__","re-frame.interop/now","duration__19609__auto__","cljs.core.swap_BANG_","re-frame.trace/traces","cljs.core/conj","cljs.core.assoc","re-frame.trace/run-tracing-callbacks!","effects","effects-without-db","cljs.core.dissoc","temp__5804__auto__","new-db","fexpr__20021","fexpr__20047","re_frame.registrar.get_handler","seq__20023","cljs.core/seq","chunk__20024","count__20025","i__20026","vec__20037","cljs.core.nth","cljs.core/chunked-seq?","c__5525__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__20042","cljs.core/first","cljs.core/next","seq__20048","chunk__20049","count__20050","i__20051","vec__20059","vec__20064","effect-key","effect-value","temp__5802__auto__","effect-fn","re_frame.loggers.console","cljs.core._EQ_","p__20068","map__20069","cljs.core/--destructure-map","cljs.core.get","re-frame.fx/dispatch-later","ms","dispatch","effect","cljs.core/empty?","re-frame.interop/set-timeout!","re-frame.router/dispatch","value","cljs.core/map?","seq__20078","chunk__20079","count__20080","i__20081","cljs.core.remove","cljs.core/nil?","seq-of-effects","cljs.core/sequential?","cljs.core/type","seq__20090","chunk__20091","count__20092","i__20093","vec__20100","vec__20103","cljs.core/vector?","seq__20106","chunk__20107","count__20108","i__20109","event","clear-event","cljs.core.partial","re-frame.registrar/clear-handlers","re-frame.events/kind","seq__20110","chunk__20111","count__20112","i__20113","cljs.core/deref","re-frame.db/app-db","cljs.core/reset!","*current-trace*-orig-val__20114","*current-trace*-temp-val__20115"]],"~:used-vars",["^F",["~$cljs.core/--destructure-map","~$re-frame.fx/kind","~$cljs.core/sequential?","~$re-frame.fx/reg-fx","~$re-frame.registrar/get-handler","~$re-frame.db/app-db","~$re-frame.fx/do-fx","~$cljs.core/vector?","~$cljs.core/=","~$re-frame.trace/traces","~$cljs.core/partial","~$re-frame.interceptor/->interceptor","~$cljs.core/count","~$cljs.core/deref","~$cljs.core/seq","~$cljs.core/chunk-first","~$re-frame.events/kind","~$re-frame.trace/start-trace","~$re-frame.registrar/clear-handlers","~$re-frame.registrar/kinds","~$re-frame.fx/dispatch-later","~$re-frame.loggers/console","~$cljs.core/dissoc","~$cljs.core/chunk-rest","~$re-frame.interop/now","~$cljs.core/empty?","~$cljs.core/map?","~$cljs.core/reset!","~$re-frame.registrar/register-handler","~$cljs.core/conj","~$cljs.core/swap!","~$re-frame.trace/is-trace-enabled?","~$cljs.core/get","~$cljs.core/-nth","~$cljs.core/remove","~$cljs.core/nil?","~$cljs.core/nth","~$re-frame.trace/*current-trace*","~$cljs.core/next","~$cljs.core/not","~$cljs.core/assoc","~$re-frame.router/dispatch","~$cljs.core/first","~$re-frame.trace/run-tracing-callbacks!","~$re-frame.interop/set-timeout!","~$js/Error","~$cljs.core/type","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["^1D","reagent/impl/batching.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["^T","^S","~$reagent.debug","~$reagent.impl.util"]]],["^1D","goog/dom/tagname.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","~$goog.dom.HtmlElement"]]],["^1D","goog/labs/useragent/platform.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","~$goog.string.internal","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1D","goog/math/math.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","~$goog.asserts"]]],["^1D","goog/html/trustedtypes.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","goog/events/eventtype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","~$goog.events.eventTypeHelpers","~$goog.userAgent"]]],["^1D","goog/labs/useragent/browser.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^34","^35","^38","^33","^36","^37"]]],["^1D","goog/html/safeurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^38","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^33"]]],["^1D","re_frame/loggers.cljc"],["74e132cc593ed2d72a5d4874954c58677a905f0e","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S","~$clojure.set"]]],["^1D","goog/array/array.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^38"]]],["^1D","reagent/impl/util.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S","~$clojure.string","~$clojure.walk","~$goog.object","^30"]]],["^1D","goog/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^34","~$goog.reflect","^33"]]],["^1D","re_frame/router.cljc"],["74e132cc593ed2d72a5d4874954c58677a905f0e","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S","^P","^N","^Y","^Q"]]],["^1D","goog/debug/error.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","goog/flags/flags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","goog/events/events.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^38","~$goog.debug.entryPointRegistry","~$goog.events.BrowserEvent","~$goog.events.BrowserFeature","~$goog.events.Listenable","~$goog.events.ListenerMap"]]],["^1D","re_frame/registrar.cljc"],["74e132cc593ed2d72a5d4874954c58677a905f0e","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S","^N","^Y","~$re-frame.settings"]]],["^1D","goog/events/browserfeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","goog/dom/nodetype.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","goog/labs/useragent/highentropy/highentropyvalue.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^34","^33"]]],["^1D","reagent/ratom.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S","^31","^30","~$reagent.impl.batching","^3?","^3B"]]],["^1D","re_frame/interop.cljs"],["74e132cc593ed2d72a5d4874954c58677a905f0e","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S","~$goog.async.nextTick","~$goog.events","~$reagent.core","~$reagent.ratom"]]],["^1D","goog/disposable/disposable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","~$goog.disposable.IDisposable","~$goog.dispose","~$goog.disposeAll"]]],["^1D","goog/string/typedstring.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","shadow/js.js"],["9f7e9af956a2382125566bda807c3a327b3548ac","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","goog/object/object.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","reagent/impl/template.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S","^C","^3@","^31","~$reagent.impl.component","~$reagent.impl.input","~$reagent.impl.protocols","^3Q","^30","^3B"]]],["^1D","goog/dom/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^38"]]],"~:SHADOW-TIMESTAMP",[1714079255000,1714079255000,1712878474000],["^1D","re_frame/events.cljc"],["74e132cc593ed2d72a5d4874954c58677a905f0e","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S","^Z","~$re-frame.utils","^N","^R","^Y","^O","^Q"]]],["^1D","goog/math/long.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^38","^3F"]]],["^1D","goog/events/listener.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","~$goog.events.ListenableKey"]]],["^1D","goog/html/trustedresourceurl.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^38","~$goog.fs.blob","^3;","~$goog.html.SafeScript","~$goog.html.trustedtypes","^3=","^3>"]]],["^1D","goog/events/listenermap.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","~$goog.array","~$goog.events.Listener","^3B"]]],["^1D","goog/events/eventid.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","goog/string/internal.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","goog/functions/functions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","goog/html/safestyle.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^3=","~$goog.html.SafeUrl","^3>","^38","^33"]]],["^1D","goog/dom/safe.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^38","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^40","~$goog.html.SafeStyle","^44","^3<","~$goog.html.uncheckedconversions","^3=","^33"]]],["^1D","goog/asserts/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","~$goog.dom.TagName","^38","~$goog.dom.element"]]],["^1D","reagent/impl/component.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S","^3B","^C","^31","^3M","^3W","^3Q","^30"]]],["^1D","clojure/walk.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S"]]],["^1D","goog/html/safehtml.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^3=","^40","^49","~$goog.html.SafeStyleSheet","^44","^4;","^3<","^3>","^38","^3C","^42","^3B","^33","~$goog.dom.tags","^41"]]],["^1D","goog/dom/tags.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^3B"]]],["^1D","goog/math/size.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","goog/labs/useragent/engine.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^42","^33","^34"]]],["^1D","goog/fs/blob.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","re_frame/settings.cljc"],["74e132cc593ed2d72a5d4874954c58677a905f0e","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S","^N","^Y"]]],["^1D","goog/dom/dom.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^42","^38","^45","~$goog.dom.BrowserFeature","~$goog.dom.NodeType","^4;","~$goog.dom.safe","^48","^4:","~$goog.math.Coordinate","~$goog.math.Size","^3B","~$goog.string","^3=","~$goog.string.Unicode","^3:"]]],["^1D","goog/asserts/asserts.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","~$goog.debug.Error","^4@"]]],["^1D","reagent/impl/protocols.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S"]]],["^1D","goog/uri/uri.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^42","^38","~$goog.collections.maps","^4D","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1D","goog/labs/useragent/highentropy/highentropydata.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^35"]]],["^1D","goog/collections/maps.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","goog/events/eventtypehelpers.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^3I","^3:"]]],["^1D","re_frame/db.cljc"],["74e132cc593ed2d72a5d4874954c58677a905f0e","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S","^N"]]],["^1D","goog/disposable/idisposable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","goog/fs/url.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","goog/base.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",[]]],["^1D","goog/structs/structs.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^42","^3B"]]],["^1D","goog/disposable/dispose.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","clojure/string.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S","^4D","~$goog.string.StringBuffer"]]],["~:shadow.build.js-support/require","react"],["^C","shadow.js.shim.module$react.js","require","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","~$shadow.js"]]],["^1D","goog/debug/entrypointregistry.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^38"]]],["^1D","goog/string/string.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^4A","^4:","^3=","^33"]]],["^1D","re_frame/interceptor.cljc"],["74e132cc593ed2d72a5d4874954c58677a905f0e","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S","^Y","^N","^Q","^R","^3Y","^3?"]]],["^1D","goog/reflect/reflect.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","goog/labs/useragent/util.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^33","^37"]]],["^1D","reagent/core.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S","^C","~$reagent.impl.template","^3U","^31","^3M","^3W","^3Q","^30"]]],["^1D","goog/debug/debug.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^42","~$goog.debug.errorcontext"]]],["^1D","goog/string/stringbuffer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","goog/math/coordinate.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","~$goog.math"]]],["^1D","goog/debug/errorcontext.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","goog/labs/useragent/useragent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","~$goog.flags"]]],["^1D","goog/async/nexttick.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^3G","~$goog.dom","^4;","^47","^3C","^3D"]]],["^1D","goog/dom/element.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^4@","^4;"]]],["^1D","goog/html/uncheckedconversions.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^38","^48","^40","^49","^4=","^44","^3<","^3=","^33"]]],["^1D","re_frame/utils.cljc"],["74e132cc593ed2d72a5d4874954c58677a905f0e","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S","^Y","^N"]]],["^1D","re_frame/fx.cljc"],["74e132cc593ed2d72a5d4874954c58677a905f0e","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S","^V","^Z","^O","^N","^P","^R","^Y","^Q"]]],["^1D","reagent/impl/input.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S","^3U","^3M","^3W"]]],["^1D","goog/events/event.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","~$goog.Disposable","~$goog.events.EventId"]]],["^1D","goog/dom/htmlelement.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","cljs/core.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","~$goog.math.Long","~$goog.math.Integer","^4D","^3B","^42","~$goog.Uri","^4L"]]],["^1D","goog/html/safescript.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^3=","^3>","^41","^38"]]],["^1D","reagent/debug.cljs"],["1b9a181b5c7ed3557768d2ea0c66f5616aef5e97","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S"]]],["^1D","goog/html/safestylesheet.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^3=","^49","^3>","^3B","^38","^33"]]],["^1D","goog/events/browserevent.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","~$goog.debug","~$goog.events.Event","~$goog.events.EventType","^3F","^3:"]]],["^1D","goog/math/integer.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^3F"]]],["^1D","goog/dom/browserfeature.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^3:"]]],["^1D","clojure/set.cljs"],["b89362aeac5c1cafea76c798929ee5d385c461d8","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S"]]],["^1D","goog/uri/utils.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^38","^4D"]]],["^1D","goog/string/const.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^38","^3>"]]],["^1D","goog/disposable/disposeall.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^3S"]]],["^1D","goog/events/listenable.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","goog/events/listenablekey.js"],["533ce2bdbb7925db781449abb6527af1e6c5e782","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T"]]],["^1D","re_frame/trace.cljc"],["74e132cc593ed2d72a5d4874954c58677a905f0e","^2X",["^ ","^2Y",null,"^2Z",["^F",[]],"^2[",["^T","^S","^N","^Y","^47"]]]]],"~:clj-info",["^ ","jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/env.cljc",1712878474000,"jar:file:/Users/namigtahmazli/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/interop.clj",1679436882000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader.clj",1712878474000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1712878474000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/tagged_literals.cljc",1712878474000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer.cljc",1712878474000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/passes.cljc",1712878474000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/impl.cljc",1712878474000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/js_deps.cljc",1712878474000,"jar:file:/Users/namigtahmazli/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/core.clj",1679436882000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/core.cljc",1712878474000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map.clj",1712878474000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/instant.clj",1712878474000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/compiler.cljc",1712878474000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1655069639000,"jar:file:/Users/namigtahmazli/.m2/repository/re-frame/re-frame/1.4.3/re-frame-1.4.3.jar!/re_frame/trace.cljc",1712931197000,"jar:file:/Users/namigtahmazli/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/debug.clj",1679436882000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/data/json.clj",1712878474000,"jar:file:/Users/namigtahmazli/.m2/repository/net/cgrand/macrovich/0.2.1/macrovich-0.2.1.jar!/net/cgrand/macrovich.cljc",1679436882000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/impl/namespaces.cljc",1712878474000,"jar:file:/Users/namigtahmazli/.m2/repository/reagent/reagent/1.2.0/reagent-1.2.0.jar!/reagent/ratom.clj",1679436882000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1655069639000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1655069639000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1712878474000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map/base64_vlq.clj",1712878474000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1712878474000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/analyzer/passes/and_or.cljc",1712878474000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1712878474000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/externs.clj",1712878474000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1655069639000,"jar:file:/Users/namigtahmazli/.m2/repository/re-frame/re-frame/1.4.3/re-frame-1.4.3.jar!/re_frame/interop.clj",1712931197000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1655069639000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1655069639000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/source_map/base64.clj",1712878474000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1655069639000,"jar:file:/Users/namigtahmazli/.m2/repository/org/clojure/clojurescript/1.11.132/clojurescript-1.11.132.jar!/cljs/util.cljc",1712878474000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_frame/fx.cljc","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^I",["^ "],"^L",null,"^M",["^ ","^N","^N","^O","^O","^P","^P","^Q","^Q","^R","^R","^S","^S","^T","^T","^U","^V","^V","^V","^W","^Q","^X","^P","^Y","^Y","^Z","^Z"],"^[",["^F",["^10"]],"~:shadow/js-access-global",["^F",["Error"]],"^11",["^ ","^12","^Z","^13","^O","^14","^N","^15","^R","^16","^R","^17","^R","^18","^Y"],"~:defs",["^ ","~$kind",["^ ","^5",["^ ","^6","re_frame/fx.cljc","^7",14,"^8",6,"^9",14,"^:",10],"^G","^1S","^6","re_frame/fx.cljc","^:",10,"^8",1,"~:root-source-info",["^ ","~:source-type","~:fragment","~:source-form",["^1;",["~$def","^5X","~:fx"]]],"^7",14,"^9",14,"~:tag","~$cljs.core/Keyword"],"~$reg-fx",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",17,"^8",7,"^9",17,"^:",13,"~:arglists",["^1;",["~$quote",["^1;",[["~$id","~$handler"]]]]]],"^G","^1U","^6","re_frame/fx.cljc","^:",13,"~:method-params",["^1;",[["^69","^6:"]]],"~:protocol-impl",null,"~:arglists-meta",["^1;",[null,null]],"^8",1,"^5Y",["^ ","^5Z","^5[","^60",["^1;",["~$defn","^65",["^69","^6:"],["^1;",["^17","^5X","^69","^6:"]]]]],"~:variadic?",false,"^7",17,"~:ret-tag","~$any","^9",17,"~:max-fixed-arity",2,"~:fn-var",true,"^67",["^1;",["^68",["^1;",[["^69","^6:"]]]]]],"~$do-fx",["^ ","^5",["^ ","^6","re_frame/fx.cljc","^7",23,"^8",6,"^9",23,"^:",11],"^G","^1X","^6","re_frame/fx.cljc","^:",11,"^8",1,"^5Y",["^ ","^5Z","^5[","^60",["^1;",["^61","^6D","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed, other than that\n  `:db` is guaranteed to be executed first.",["^1;",["^13","~:id","~:do-fx","~:after",["^1;",["~$fn","~$do-fx-after",["~$context"],["^1;",["~$trace/with-trace",["^ ","~:op-type","~:event/do-fx"],["^1;",["~$let",["~$effects",["^1;",["~:effects","^6J"]],"~$effects-without-db",["^1;",["~$dissoc","^6O","~:db"]]],["^1;",["~$when-let",["~$new-db",["^1;",["^6S","^6O"]]],["^1;",[["^1;",["^15","^5X","^6S",false]],"^6U"]]]],["^1;",["~$doseq",[["~$effect-key","~$effect-value"],"^6Q"],["^1;",["~$if-let",["~$effect-fn",["^1;",["^15","^5X","^6W",false]]],["^1;",["^6Z","^6X"]],["^1;",["^18","~:warn","re-frame: no handler registered for effect:","^6W",". Ignoring.",["^1;",["~$when",["^1;",["~$=","~:event","^6W"]],["^1;",["~$str","You may be trying to return a coeffect map from an event-fx handler. ","See https://day8.github.io/re-frame/use-cofx-as-fx/"]]]]]]]]]]]]]]]]]]]]],"^7",23,"^9",23,"^63",["^F",["~$clj","^6A","~$cljs.core/IMap"]],"~:doc","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed, other than that\n  `:db` is guaranteed to be executed first."],"~$dispatch-later",["^ ","^66",null,"^5",["^ ","^6","re_frame/fx.cljc","^7",84,"^8",7,"^9",84,"^:",21,"^67",["^1;",["^68",["^1;",[[["^ ","~:keys",["~$ms","~$dispatch"],"^1=","~$effect"]]]]]]],"^G","^2:","^6","re_frame/fx.cljc","^:",21,"^6;",["^1;",[["~$p__20068"]]],"^6<",null,"^6=",["^1;",[null,null]],"^8",1,"^5Y",["^ ","^5Z","^5[","^60",["^1;",["^6>","^76",[["^ ","^77",["^78","^79"],"^1=","^7:"]],["^1;",["~$if",["^1;",["~$or",["^1;",["~$empty?","^79"]],["^1;",["~$not",["^1;",["~$number?","^78"]]]]]],["^1;",["^18","~:error","re-frame: ignoring bad :dispatch-later value:","^7:"]],["^1;",["^14",["^1;",["~$fn*",[],["^1;",["~$router/dispatch","^79"]]]],"^78"]]]]]]],"^6?",false,"^7",84,"^6@",["^F",["^6A","^1L"]],"^9",84,"^6B",1,"^6C",true,"^67",["^1;",["^68",["^1;",[[["^ ","^77",["^78","^79"],"^1=","^7:"]]]]]]]],"^19",["^ ","^Q","^Q","^W","^Q","^S","^S"],"~:cljs.analyzer/constants",["^ ","^[",["^F",["^6S","~:reagent/quiescent","^6[","^6F","~:start","~:dispatch-n","~:duration","~:deregister-event-handler","~:dispatch","^71","^6G","^6M","^6E","^6P","^7A","~:end","~:ms","^62","^6L","~:dispatch-later"]],"~:order",["^62","^6E","^6F","^6G","^6L","^6M","^7F","^7H","^7K","^6P","^6S","^6[","^71","^7L","^7J","^7A","^7M","^7G","^7I","^7E"]],"^1@",["^ ","^10",["^F",[]]],"^1A",["^ "],"^1B",["^T","^S","^V","^Z","^O","^N","^P","^R","^Y","^Q"]],"^K","^H","~:ns-specs",["^ "],"~:ns-spec-vars",["^F",[]],"~:compiler-options",["^2W",[["^7Q","~:static-fns"],true,["~:js-options","~:use-babel"],null,["^7Q","~:shadow-tweaks"],null,["^7Q","~:source-map-inline"],null,["^7Q","~:shadow-optimize-constants"],null,["^7Q","~:elide-asserts"],false,["^7Q","~:optimize-constants"],null,["^7Q","^1G"],null,["^7Q","~:external-config"],null,["^7Q","~:tooling-config"],null,["^7Q","~:emit-constants"],null,["^7Q","~:load-tests"],null,["^7Q","~:form-size-threshold"],null,["^7Q","~:global-goog-object&array"],null,["^7Q","~:data-readers"],null,["^7Q","~:infer-externs"],"~:auto",["^7Q","^1I"],null,["^7S","~:js-provider"],"^10",["~:mode"],"~:dev",["^7Q","~:fn-invoke-direct"],null,["^7Q","~:source-map"],"/dev/null"]]]